name: PIC CI

on:
    workflow_dispatch:

jobs:
  run_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repositoryg
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '14'

    - name: Install dependencies
      working-directory: ./challenge
      run: npm install

   

    - name: Run tests
      working-directory: ./challenge
      run: npm test

  snyk:
    needs: run_test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master  
    - name: Run Snyk to check for vulnerabilities
      id: snyk
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  
      with:
        args: --all-projects
    

  sonarcloud:
    needs: run_test
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  send_notification:
    needs: snyk
    runs-on: ubuntu-latest
    steps:
      - name: Send notification
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>."
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_users: "U0160UUNH8S,U0080UUAA9N"
          mention_users_when: "failure,warnings"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}      
          

  build_push:
    needs: [snyk,sonarcloud]
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: user/app:latest

   

  